// Original Code
// @000                	// .pos 0
//                     	// Init:
// 30f58002000000000000	//   0:  irmovq Stack, %rbp
// 30f48002000000000000	//  10:  irmovq Stack, %rsp
// 802800000000000000  	//  20:  call Main
// c00e                	//  29:  mtc0 %rax, $14
// 00                  	//  31:  halt
// 
// @005                	// .pos 40
//                     	// Main:
// a05f                	//  40:  pushq %rbp
// 2045                	//  42:  rrmovq %rsp, %rbp
// 30f10038000000000000	//  44:  irmovq $14336, %rcx # rcx = start position
// 30fa0008000000000000	//  54:  irmovq $2048, %r10  # r10 = position incrementer
// 30f30f00000000000000	//  64:  irmovq $15, %rbx    # rbx = counter
// 30f70100000000000000	//  74:  irmovq $1, %rdi     # rdi = counter decrementer
// 6300                	//  84:  xorq %rax, %rax     # rax = 0
// 
//                     	// MainLoop:
// 6173                	//  86:  subq %rdi, %rbx     # decrease the counter
// 30f92000000000000000	//  88:  irmovq $32, %r9    # r9 = add number left
// 30fb2000000000000000	//  98:  irmovq $32, %r11   # r11 = sub number left
// 
//                     	// AddLoop:
// 60a1                	// 108:  addq %r10, %rcx     # rcx = next value
// 50210000000000000000	// 110:  mrmovq (%rcx), %rdx # rdx = memory value
// 6020                	// 120:  addq %rdx, %rax     # rax = rax + rdx
// 6179                	// 122:  subq %rdi, %r9      # ZF = 1 if loop ends
// 746c00000000000000  	// 124:  jne AddLoop
//                     	// SubLoop:
// 50210000000000000000	// 133:  mrmovq (%rcx), %rdx # rdx = memory value
// 6120                	// 143:  subq %rdx, %rax     # rax = rax - rdx
// 61a1                	// 145:  subq %r10, %rcx     # rcx = next value
// 617b                	// 147:  subq %rdi, %r11     # ZF = 1 if loop ends
// 748500000000000000  	// 149:  jne SubLoop
// 6233                	// 158:  andq %rbx, %rbx     # ZF = 1 if loop ends
// 745600000000000000  	// 160:  jne MainLoop
// 2054                	// 169:  rrmovq %rbp, %rsp
// b05f                	// 171:  popq %rbp
// 90                  	// 173:  ret
// 
// @050                	// .pos 640
//                     	// Stack:
// 
// @800                	// .pos 16384
//                     	// .align 8
// 0100000000000000    	// 16384:  .quad 0x1
// 
// @900                	// .pos 18432
//                     	// .align 8
// 0200000000000000    	// 18432:  .quad 0x2
// 
// @a00                	// .pos 20480
//                     	// .align 8
// 0300000000000000    	// 20480:  .quad 0x3
// 
// @b00                	// .pos 22528
//                     	// .align 8
// 0400000000000000    	// 22528:  .quad 0x4
// 
// @c00                	// .pos 24576
//                     	// .align 8
// 0500000000000000    	// 24576:  .quad 0x5
// 
// @d00                	// .pos 26624
//                     	// .align 8
// 0600000000000000    	// 26624:  .quad 0x6
// 
// @e00                	// .pos 28672
//                     	// .align 8
// 0700000000000000    	// 28672:  .quad 0x7
// 
// @f00                	// .pos 30720
//                     	// .align 8
// 0800000000000000    	// 30720:  .quad 0x8
// 
// @1000               	// .pos 32768
//                     	// .align 8
// 0900000000000000    	// 32768:  .quad 0x9
// 
// @1100               	// .pos 34816
//                     	// .align 8
// 0a00000000000000    	// 34816:  .quad 0xa
// 
// @1200               	// .pos 36864
//                     	// .align 8
// 0b00000000000000    	// 36864:  .quad 0xb
// 
// @1300               	// .pos 38912
//                     	// .align 8
// 0c00000000000000    	// 38912:  .quad 0xc
// 
// @1400               	// .pos 40960
//                     	// .align 8
// 0d00000000000000    	// 40960:  .quad 0xd
// 
// @1500               	// .pos 43008
//                     	// .align 8
// 0e00000000000000    	// 43008:  .quad 0xe
// 
// @1600               	// .pos 45056
//                     	// .align 8
// 0f00000000000000    	// 45056:  .quad 0xf
// 
// @1700               	// .pos 47104
//                     	// .align 8
// 1000000000000000    	// 47104:  .quad 0x10
// 
// @1800               	// .pos 49152
//                     	// .align 8
// 1100000000000000    	// 49152:  .quad 0x11
// 
// @1900               	// .pos 51200
//                     	// .align 8
// 1200000000000000    	// 51200:  .quad 0x12
// 
// @1a00               	// .pos 53248
//                     	// .align 8
// 1300000000000000    	// 53248:  .quad 0x13
// 
// @1b00               	// .pos 55296
//                     	// .align 8
// 1400000000000000    	// 55296:  .quad 0x14
// 
// @1c00               	// .pos 57344
//                     	// .align 8
// 1500000000000000    	// 57344:  .quad 0x15
// 
// @1d00               	// .pos 59392
//                     	// .align 8
// 1600000000000000    	// 59392:  .quad 0x16
// 
// @1e00               	// .pos 61440
//                     	// .align 8
// 1700000000000000    	// 61440:  .quad 0x17
// 
// @1f00               	// .pos 63488
//                     	// .align 8
// 1800000000000000    	// 63488:  .quad 0x18
// 
// @2000               	// .pos 65536
//                     	// .align 8
// 1900000000000000    	// 65536:  .quad 0x19
// 
// @2100               	// .pos 67584
//                     	// .align 8
// 1a00000000000000    	// 67584:  .quad 0x1a
// 
// @2200               	// .pos 69632
//                     	// .align 8
// 1b00000000000000    	// 69632:  .quad 0x1b
// 
// @2300               	// .pos 71680
//                     	// .align 8
// 1c00000000000000    	// 71680:  .quad 0x1c
// 
// @2400               	// .pos 73728
//                     	// .align 8
// 1d00000000000000    	// 73728:  .quad 0x1d
// 
// @2500               	// .pos 75776
//                     	// .align 8
// 1e00000000000000    	// 75776:  .quad 0x1e
// 
// @2600               	// .pos 77824
//                     	// .align 8
// 1f00000000000000    	// 77824:  .quad 0x1f
// 
// @2700               	// .pos 79872
//                     	// .align 8
// 2000000000000000    	// 79872:  .quad 0x20


// VMH Format Result
@000
30f5800200000000
000030f480020000
0000000080280000
0000000000c00e00
@005
a05f204530f10038
00000000000030fa
0008000000000000
30f30f0000000000
000030f701000000
0000000063006173
30f9200000000000
000030fb20000000
0000000060a15021
0000000000000000
60206179746c0000
0000000000502100
0000000000000061
2061a1617b748500
0000000000006233
7456000000000000
002054b05f900000
@800
0100000000000000
@900
0200000000000000
@a00
0300000000000000
@b00
0400000000000000
@c00
0500000000000000
@d00
0600000000000000
@e00
0700000000000000
@f00
0800000000000000
@1000
0900000000000000
@1100
0a00000000000000
@1200
0b00000000000000
@1300
0c00000000000000
@1400
0d00000000000000
@1500
0e00000000000000
@1600
0f00000000000000
@1700
1000000000000000
@1800
1100000000000000
@1900
1200000000000000
@1a00
1300000000000000
@1b00
1400000000000000
@1c00
1500000000000000
@1d00
1600000000000000
@1e00
1700000000000000
@1f00
1800000000000000
@2000
1900000000000000
@2100
1a00000000000000
@2200
1b00000000000000
@2300
1c00000000000000
@2400
1d00000000000000
@2500
1e00000000000000
@2600
1f00000000000000
@2700
2000000000000000
